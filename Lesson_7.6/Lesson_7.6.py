# Оператор прерывания цикла break
# Иногда требуется прервать выполнение цикла предждевременно. Оператор прерывает ближайший цикл for или while.

# Напишем программу, определяющую, что число является простым
num = int(input())
flag = True
for i in range(2, num):
    if num % i == 0:     # если исходное число делится на какое либо отличное от 1 и самого себя
        flag = False
        break            # останаливаем цикл если встретили делитель числа
if flag == True:
    print('Число простое')
else:
    print('Число составное')

# Оператор прерывания цикл break позволяет ускорять программы, так как мы избавляемся от лишних итераций.

# Напишем программу, которая считывает 10 чисел и суммирует их до тех пор, пока не обнаружит отриательное число
result = 0
for i in range(10):
    num = int(input())
    if num < 0:
        break
    result += num
print(result)

# Оператор прерывания цикла break удобен в связке с сигнальными метками: когда после проверки некоторого условия нам нет
# смысла продолжать выполнение цикла.

# Напишем программу, которая определяет содержит ли введеное пользователем число, цифру 7
num = int(input())
number = num
flag = False
while num != 0:
    last_digit = num % 10
    if last_digit == 7:
        flag = True
        break  # прерываем цикд, так как число гарантировано содержит цифру 7
    num //= 10
if flag == True:
    print('Число', number, 'содержит цифру 7')
else:
    print('Число', number, 'не содержит цифру 7')

# Бесконечные циклы
# while True:
#     print('Python awesome!')
# Результат выполнения такого кода, будет бесконечное количество строчек теста.
# Бесконечный цикл продолжает повторятся до тех пор, пока программа не будет прервана.
# Бесконечные циклы могут быть очень полезными. Просто помните, что вы должны убедится, что цикл в какой-то момент будет
# прерван, чтобы действительно не становился бесконечным

# Оператор continue
# - позволяет перейти к следующей итерации цикла for или while до заверщения всех команд в теле цикла
# Напишем программу, которая выводит все числа от 1 до 100, кроме 7, 17, 29 и 78
for i in range(1, 101):
    if i == 7 or i == 17 or i == 29 or i == 78:
        continue  # переходим на следующую итерацию
    print(i)

# Блок else в циклах
# Python допускает необязательный блок else в конце циклов while и for.

# while условие:
#   блок_кода_1
# else:
#   блок_кода_2

# for i in range(10):
#   блок_кода_1
# else:
#   блок_кода_2

# Блок_кода_2, указанный в else, будет выполнен, когда штатным образом завершится цикл while или for.
# Под штатным завершением цикла, подразумевается его завершение без использования оператора прерывания break.


