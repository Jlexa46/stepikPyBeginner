# Представление строк в памяти компьютера
# Любой набор данных в оперативной памяти компьютера должен храниться в виде двоичного числа. Это относится и к строкам,
# которые состоят из символов (буквы, знаки препинания и т.д.). Когда символ сохраняется в памяти,
# он сначала преобразуется в цифровой код. И затем этот цифровой код сохраняется в памяти как двоичное число.

# За прошедшие годы для представления символов в памяти компьютера были разработаны различные схемы кодирования.
# Исторически самой важной из этих схем кодирования является схема кодирования ASCII
# (American Standard Code for Information Interchange – американский стандартный код обмена информацией).


# Таблица символов ASCII
# ASCII представляет собой набор из 128 цифровых кодов, которые обозначают английские буквы, различные знаки препинания
# и другие символы. Например, код ASCII для прописной английской буквы «А» (латинской) равняется 65.

# Код ASCII для английской «В» в верхнем регистре равняется 66, для «С» в верхнем регистре – 67 и т. д.
# На один символ в ASCII отводится ровно 7 бит.

# Однако схема кодирования ASCII имеет ограничения, потому что она определяет коды только для 128 символов.
# Для того чтобы это исправить, в начале 1990-х годов был разработан набор символов Юникода (Unicode).
# Это широкая схема кодирования, совместимая с ASCII, которая может также представлять символы многих языков мира.
# Сегодня Юникод быстро становится стандартным набором символов, используемым в компьютерной индустрии.


# Таблица символов Unicode
# Таблица символов Юникод представляет собой набор цифровых символов, которые включают в себя знаки почти всех
# письменных языков мира. Стандарт предложен в 1991 году некоммерческой организацией «Консорциум Юникода».
# Применение этого стандарта позволяет закодировать очень большое число символов из разных систем письменности:
# в документах, закодированных по стандарту Юникод, могут соседствовать китайские иероглифы, математические символы,
# буквы греческого алфавита, латиницы и кириллицы, символы музыкальной нотной нотации.

# Стандарт состоит из двух основных частей:
# универсального набора символов
# семейства кодировок (Unicode transformation format, UTF).

# Универсальный набор символов перечисляет допустимые по стандарту Юникод символы и присваивает каждому символу
# код в виде неотрицательного целого числа.
# Семейство кодировок определяет способы преобразования кодов символов для хранения на компьютере и передачи.

# Функция ord позволяет определить код некоторого символа в таблице символов Unicode.
# Аргументом данной функции является одиночный символ.
num1 = ord('A')
num2 = ord('B')
num3 = ord('a')
print(num1, num2, num3)  # 65 66 97

# Функция chr позволяет определить по коду символа сам символ.
# Аргументом данной функции является численный код.
chr1 = chr(65)
chr2 = chr(75)
chr3 = chr(110)
print(chr1, chr2, chr3)  # A K n
