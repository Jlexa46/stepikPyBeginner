# Угадайка чисел
# Описание проекта: программа генерирует случайное число в диапазоне от 11 до 100100 и просит пользователя угадать это
# число. Если догадка пользователя больше случайного числа, то программа должна вывести сообщение
# 'Слишком много, попробуйте еще раз'. Если догадка меньше случайного числа, то программа должна вывести сообщение
# 'Слишком мало, попробуйте еще раз'. Если пользователь угадывает число, то программа должна поздравить его и вывести
# сообщение 'Вы угадали, поздравляем!'.

# Составляющие проекта:
#     Целые числа (тип int);
#     Переменные;
#     Ввод / вывод данных (функции input() и print());
#     Условный оператор (if/elif/else);
#     Цикл while;
#     Бесконечный цикл;
#     Операторы break, continue;
#     Работа с модулем random для генерации случайных чисел.


# Оптимальная стратегия угадывания числа
# Чтобы гарантированно угадать задуманное число от 11 до 100100 потребуется не более 77 попыток.

# Оптимальный алгоритм угадывания: положим left = 1 и right = 100.
#     Называем число, равное middle = (left + right) // 2;
#     Если число middle равно задуманному числу, то мы угадали!;
#     Если число middle меньше задуманного числа, то положим left = middle + 1 и продолжим алгоритм;
#     Если число middle больше задуманного числа, то положим right = middle - 1 и продолжим алгоритм.

# Поскольку на каждой итерации мы отбрасываем половину чисел, то гарантировано угадаем задуманное число за величину,
# равную math.log2(n) (двоичный логарифм) округленную до целого в большую сторону. При n=100 получаем 7 попыток.


# Заголовок программы
#     1. Подключите модуль random;
#     2. Сгенерируйте случайное число от 11 до 100100;
#     3. Выведите текст приветствия пользователю: 'Добро пожаловать в числовую угадайку'.


# Функция проверки корректности введенных данных
# Пользователь потенциально может ввести неверные данные, например, не число, или число превышающее 100. Важно
# предусмотреть такую возможность, чтобы программа продолжала правильно работать. Обработка такого рода ситуаций
# называется защитой от дурака.
# Напишите функцию is_valid() в которую передается один строковый аргумент. Функция возвращает значение True если
# переданный аргумент является целым числом от 1 до 100 и False в противном случае.


# Основной цикл программы
#     1. Организуйте цикл, который будет запрашивать у пользователя данные (цикл может быть бесконечным (while True) или
#       может использовать сигнальную метку с последующим переключением, после угадывания числа);
#     2. Запросите у пользователя число от 11 до 100100;
#     3. Проверьте введенные данные с помощью функции is_valid():
#         - если данные некорректны, выведите текст: 'А может быть все-таки введем целое число от 1 до 100?' и перейдите
#           к следующей итерации основного цикла;
#         - если данные корректны, преобразуйте их к целому числу для удобства дальнейшей работы.


# Сравнение введенного числа с загаданным
# 1. Организуйте сравнение введенного числа с загаданным числом:
#     - Если введенное число меньше загаданного числа, выведите текст:
#       'Ваше число меньше загаданного, попробуйте еще разок';
#     - Если введенное число больше загаданного числа, выведите текст:
#       'Ваше число больше загаданного, попробуйте еще разок';
#     - Если введенное число равно загаданному числу, выведите текст:
#       'Вы угадали, поздравляем!'.
# 2. Выведите прощальное сообщение пользователю:
#   'Спасибо, что играли в числовую угадайку. Еще увидимся...'.


# Улучшения проекта
# 1. Добавьте подсчет попыток, сделанных пользователем. Когда число отгадано, программа должна показать количество попыток;
# 2. Добавьте возможность генерации нового числа (повторная игра), после того, как пользователь угадал число;
# 3. Добавить возможность указания правой границы для случайного выбора числа (от 11 до nn).
